//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Mugen_CnsStateTriggerTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Mugen.CnsStateTriggerType));
		L.RegVar("none", get_none, null);
		L.RegVar("Anim", get_Anim, null);
		L.RegVar("AnimElem", get_AnimElem, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Mugen.CnsStateTriggerType>.Check = CheckType;
		StackTraits<Mugen.CnsStateTriggerType>.Push = Push;
	}

	static void Push(IntPtr L, Mugen.CnsStateTriggerType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Mugen.CnsStateTriggerType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_none(IntPtr L)
	{
		ToLua.Push(L, Mugen.CnsStateTriggerType.none);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Anim(IntPtr L)
	{
		ToLua.Push(L, Mugen.CnsStateTriggerType.Anim);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AnimElem(IntPtr L)
	{
		ToLua.Push(L, Mugen.CnsStateTriggerType.AnimElem);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Mugen.CnsStateTriggerType o = (Mugen.CnsStateTriggerType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

